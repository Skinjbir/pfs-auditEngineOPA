var http = require('http')
var ecstatic = require('ecstatic')
var openSesame = require('sesame-stream')
var net = require('net')
var cors = require('corsify')

module.exports = function(dir){
  
  if(!dir) dir = __dirname

  var opts = {
      root       : dir + '/public', 
      showDir: true,
      autoIndex: true
  }

  var StaticPass = ecstatic(opts);
  var server = http.createServer(cors(function(req, res){
      console.log('sanity')
      if(false && req.url === '/' + output){
        fs.createReadStream(dir + '/' + output).pipe(res)
      }

      else {
        var handled = StaticPass(req, res, next)
        function next(){
          res.writeHead(200, {'content-type' : 'text/html'})
          fs.createReadStream(dir + '/' + public + '/index.html').pipe(res)
        }
      }
  }));

  server.on('upgrade', openSesame)

  listen(server, 11001)
  //server.listen(port);

  server.on('error', function(e){
    if (e.code == 'EADDRINUSE') {
      console.log('port ' + port + ' occupied. Use -p to set another port.')
      process.exit();
    }
  });

  return server

  function listen(server, _port){
    isPortTaken(_port, answer)
    function answer(err, b){
      if(!b) {
        server.listen(_port)
        
        server.on('listening', function(){

         console.log('Server listening at http://localhost:' + _port)

        });
      }
      else {
        port = _port
        isPortTaken(++_port, answer)
      }
    }
  }
  function isPortTaken(PORT, callback) {
    var tester = net.createServer()
    tester.once('error', function (err) {
      if (err.code == 'EADDRINUSE') {
        callback(null, true)
      } else {
        callback(err)
      }
    })
    tester.once('listening', function() {
      tester.once('close', function() {
        callback(null, false)
      })
      tester.close()
    })
    tester.listen(PORT)
  }
}
